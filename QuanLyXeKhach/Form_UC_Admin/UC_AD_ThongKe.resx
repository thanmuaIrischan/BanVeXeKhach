<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pl_TimKiemDichVu.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MzP7397IyL8BaMdltbqzARAAAAAASUVORK5CYII=
</value>
  </data>
</root>